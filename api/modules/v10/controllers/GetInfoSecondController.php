<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/2/24
 * Time: 12:04
 */

namespace api\modules\v10\controllers;

use api\modules\v11\models\FormThread;
use api\modules\v2\models\Profile;
use Yii;
use yii\db\Query;
use yii\myhelper\Decode;
use yii\myhelper\Response;
use yii\rest\Controller;
use yii\web\NotFoundHttpException;

class GetInfoSecondController extends Controller
{

    public $modelClass = 'api\modules\v4\models\User';
    public $serializer = [
        'class' =>  'yii\rest\Serializer',
        'collectionEnvelope'    =>  'item',
    ];

    public function behaviors()
    {
        return parent::behaviors(); // TODO: Change the autogenerated stub
    }

    public function actions()
    {
        $actions =  parent::actions(); // TODO: Change the autogenerated stub
        unset($actions['index'],$actions['view'],$actions['create'],$actions['update'],$actions['delete']);
        return $actions;
    }

    public function actionView($id){

        $model = $this->findModel($id);
        $uid = isset($_GET['uid'])?$_GET['uid']:0;
        $decode = new Decode();
        if(!$decode->decodeDigit($id)){
            Response::show(210,'参数不正确');
        }
        $follow = Yii::$app->db->createCommand("select * from pre_user_follow where user_id = {$uid} and people_id={$model['id']}")->queryOne();
        if(!$follow){
            $follow['follow'] = 0;
        }else{
            $follow['follow'] = 1;
            unset($follow['id'],$follow['people_id']);
        }

        $credit = (new Query())->select('levels,viscosity,lan_skills,sex_skills,appearance')->from('{{%credit_value}}')->where(['user_id'=>$model['id']])->one();
        if(empty($credit)) {

            Yii::$app->db->createCommand()->insert('{{%credit_value}}', [
                'user_id' => $model['id'],
                'created_at' => time(),
                'updated_at' => time()
            ])->execute();

            $glamorous = 600;
        }else{
            $glamorous = array_sum($credit);
        }
        $data = Yii::$app->db->createCommand('select * from {{%user_data}} WHERE user_id='.$model['id'])->queryOne();
        //未读帖子数
        $count = (new Query())->select('id')->from('{{%app_message}}')->where(['to_id'=>$id,'action'=>2])->count();
        $data['feed_count']=$count;
        $data['thread_count'] = FormThread::find()->where(['user_id'=>$model['id']])->count();
        $profile = Yii::$app->db->createCommand('select *,description as self_introduction from {{%user_profile}} WHERE user_id='.$model['id'])->queryOne();
        if(!$profile){
            $model2 = new Profile();
            $model2->user_id = $id;
            $model2->created_at = time();
            $model2->updated_at = time();
            $model2->save();
        }
        unset($model['password_hash'],$model['cellphone'],$model['invitation'],$model['openId'],$model['weibo_num'],$model['none'],$profile['description'],$model['auth_key'],$model['password_reset_token'],$model['id'],$model['role'],$model['identity']);
        $profile['mark']=json_decode($profile['mark']);
        $profile['make_friend']=json_decode($profile['make_friend']);
        $profile['hobby']=json_decode($profile['hobby']);
        $profile['glamorous'] = $glamorous;

        $img_url = (new Query())->select('img_url')->from('pre_user_image')->where(['user_id'=>$id])->all();
        $row = array();
        foreach($img_url as $list){
            $row[] = $list['img_url'];
        }
        $ims['photos'] = $row;

        return $model+$data+$profile+$follow+$ims;
    }

    public function actionDelete($id){

        $model = (new Query())->select('cid')->from('{{%user}}')->where(['id'=>$id])->one();
        if($model['cid']){
            $res = Yii::$app->db->createCommand("update pre_user set cid = '' where id ={$id}")->execute();
            if($res){
                Response::show('200','操作成功','cid置空成功');
            }
            Response::show('202','操作失败',"cid置空失败");
        }
        Response::show('201','操作失败','该用户没有cid');
    }

    public function findModel($id){

        $modelClass = $this->modelClass;
        //if(is_numeric($id)){
        $model = $modelClass::find()->where(['id'=>$id])->asArray()->one();
        //}else{
        //$model = $modelClass::find()->where(['username'=>$id])->asArray()->one();
        //}
        if($model != null){
            return $model;
        }else{
            throw new NotFoundHttpException('请求的页面不存在');
        }
    }
}