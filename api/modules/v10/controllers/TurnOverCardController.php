<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/2/21
 * Time: 15:46
 */

namespace api\modules\v10\controllers;

use api\modules\v2\models\Profile;
use api\modules\v6\models\MakeFriend;
use api\modules\v9\models\TurnOverCard;
use api\modules\v9\models\TurnOverCardMessage;
use api\modules\v9\models\TurnOverCardRecord;
use api\modules\v9\models\TurnOverCardSuccess;
use api\modules\v9\models\User;
use backend\modules\app\models\UserImage;
use Yii;
use yii\data\ActiveDataProvider;
use yii\db\Query;
use yii\myhelper\Decode;
use yii\myhelper\Easemob;
use yii\myhelper\Response;
use yii\rest\Controller;
use api\modules\v9\models\TurnOverCardPalace;

class TurnOverCardController extends Controller
{

    public $modelClass = 'api\modules\v9\models\TurnOverCard';
    public $serializer = [
        'class' =>  'yii\rest\Serializer',
        'collectionEnvelope'    => 'items',
    ];

    public function behaviors()
    {
        return parent::behaviors(); // TODO: Change the autogenerated stub
    }

    public function actions()
    {
        $action =  parent::actions(); // TODO: Change the autogenerated stub
        unset($action['index'],$action['view'],$action['delete'],$action['update'],$action['create']);
        return $action;
    }

    protected function config(){

        Yii::setAlias('@apppush','@backend/apppush');
        $path = Yii::getAlias('@apppush');
        require_once ($path.'/demo.php');
        //http的域名
        define('HOST','http://sdk.open.api.igexin.com/apiex.htm');

        define('APPKEY',Yii::$app->params['geAPPKEY']);
        define('APPID',Yii::$app->params['geAPPID']);
        define('MASTERSECRET',Yii::$app->params['geMASTERSECRET']);

    }

    //用户查看喜欢过自己的人 （男：会员，女：认证）
    public function actionView($id){

        $decode = new Decode();
        if(!$decode->decodeDigit($id)){
            Response::show(210,'参数不正确');
        }
        $userInfo = User::find()->where(['id'=>$id])->one();
        if(!$userInfo['groupid']){
            Response::show('201','用户不存在');
        }

        $query = TurnOverCardPalace::find();

        $success = TurnOverCardSuccess::find()->where(['beliked'=>$id,'flag'=>0])->all();
        if(count($success)>0){
            $someOneLikeMe = array();
            foreach($success as $item){
                $someOneLikeMe[] = $item['palace_id'];
            }
            $someOneLikeMe = implode(',',$someOneLikeMe);
        }

        if($userInfo['sex']==0){

            if( $userInfo['groupid'] > 1 ){
                //查看喜欢自己的 （+评论）
                if(isset($someOneLikeMe)){
                    $query->Where(['like'=>$id,'flag'=>1,'is_del'=>0])->orWhere("id in ({$someOneLikeMe}) and flag=1");
                }else{
                    $query->Where(['like'=>$id,'flag'=>1,'is_del'=>0]);
                }

            }else{
                //权限不够
                Response::show('201','权限不够，请先升级');
            }

        }else{

            //查看喜欢自己的 （+评论）
            if(isset($someOneLikeMe)){

                $query->Where(['like'=>$id,'flag'=>1,'is_del'=>0])->orWhere("id in ({$someOneLikeMe}) and flag=1");
            }else{
                $query->Where(['like'=>$id,'flag'=>1,'is_del'=>0]);
            }


        }
        $query = $query->groupBy('id');
        return new ActiveDataProvider([
            'query'         =>  $query,
            'pagination'    =>  [
                'pageSize'  =>  15,

            ],
            'sort'  =>  [
                'defaultOrder'   => [
                    'id'    =>  SORT_DESC,
                    'updated_at'    =>  SORT_DESC,
                ]
            ]
        ]);
    }

    //翻牌逻辑
    public function actionIndex($id){

        $decode = new Decode();
        if(!$decode->decodeDigit($id)){
            Response::show(210,'参数不正确');
        }
        $userInfo = User::findOne($id);
        if(empty($userInfo['id'])){
            Response::show('201','用户不存在');
        }

        //注意性别
        if($userInfo['sex'] == 0){
            $sex = 1;
        }else{
            $sex = 0;
        }

        //翻牌记录
        $record = new TurnOverCardRecord();
        $record->user_id=$id;
        $record->save();

        //后宫信息
        $likeid = array();
        $palace = TurnOverCardPalace::find()->select('like')->where(['user_id'=>$id,'flag'=>[1,2],'is_del'=>0])->all();
        foreach($palace as $list){
            $likeid[] = $list['like'];
        }

        //去除好友  ***
        $friends = $this->Easemob()->findFriend($userInfo['username']);
        if(!isset($friends['action'])){
            Response::show('201','该用户不在环信中');
        }
        $usernames = implode("','" , $friends['data']);
        $userIds = User::find()->select('id')->where("username in ('{$usernames}')")->all();
        $exceptId = array();
        foreach($userIds as $item){
            $exceptId[] = $item['id'];
        }
        $exceptId2 = implode(',',$exceptId);

        $uniqueUser = array();
        if($exceptId2){

            //有翻牌权利的人（去除后宫中的人和同性及好友）
            $user_uids = UserImage::find()->select('user_id,sex')
                ->joinWith('user')->where(['sex'=>$sex])->andWhere("user_id not in({$exceptId2})")->groupBy("user_id")->all();


        }else{
            $user_uids = UserImage::find()->select('user_id,sex')
                ->joinWith('user')->where(['sex'=>$sex])->groupBy("user_id")->all();
        }

        foreach($user_uids as $item){
            $uniqueUser[] = $item['user_id'];
            $uniqueUser0[] = $item['user_id'];
        }

        $arr = array_intersect(array_unique($likeid),$uniqueUser);
        foreach($uniqueUser as $k=>$user){
            foreach($arr as $item){
                if($user == $item){
                    unset($uniqueUser[$k]);//排除后宫的人
                }
            }
        }

        //获取翻牌的信息 【翻牌比例：地区+匹配成功率+新人+活跃度（近一周翻牌次数）+被喜欢率（各自权值：2:3:1:3:1）】
        $query = User::find()
            ->select('cid,username,nickname,groupid,cellphone,identify,pre_user.id,pre_user.updated_at,sex,address,birthdate,img_url')
            ->JoinWith('image')->JoinWith('profile');

        $rand = rand(0,9);
        $uniqueUser2 = implode(',',$uniqueUser);
        if(count($uniqueUser)<=0){

            $reLife = TurnOverCardPalace::find()->select('like')->where(['user_id'=>$id,'flag'=>1,'is_del'=>0])->asArray()->all();
            //当没有更多数据时，将曾经标记为不喜欢的删除 flag=2 不喜欢
            if(count($reLife)<=0){
                Response::show('203','没有更多的翻牌数据了1');
            }

            $reLoad0 = array();
            foreach($reLife as $k=>$item){
                $reLoad0[] = $item['like'];
            }
            $reLoad2 = array();
            foreach($uniqueUser0 as $key=>$value){
                if(!in_array($value,$reLoad0)){
                    $reLoad2[] = $value;
                }
            }
            //把多次dislike 删除
            Yii::$app->db->createCommand("delete from pre_turn_over_card_palace where flag = 2 and user_id={$id}")->execute();
            if(!$reLoad2){
                Response::show('203','没有更多的翻牌数据了2');
            }
            $reLoad3 = implode(',',array_unique($reLoad2));
            $info = $query->where("pre_user.id in ({$reLoad3})");
        }else{

            switch($rand){
                case 0:
                case 1://按地区 -- （去除后宫的人）

                    $address = mb_substr($userInfo["profile"]["address"],0,2,'utf-8');
                    $data = Profile::find()->select('user_id')->where(" address like '%{$address}%' ")->andWhere(" user_id in ({$uniqueUser2}) ")->asArray()->all();
                    $data0 = array();

                    foreach($data as $item){
                        $data0[] = $item['user_id'];
                    }
                    $data1 = implode(',',$data0);

                    //当同地区的人数大于等于50 按照地区查找
                    if( count($data0) >= 50 ){//
                        if(count($data0)<=0){
                            Response::show('203','没有更多的翻牌数据了3');
                        }
                        $info = $query->andWhere("pre_user.id in ({$data1}) ");break;
                    }else{
                        //如果人数少于50，把dislike上的人也获取过来
                        if(count($uniqueUser) >= 50){

                            if(count($uniqueUser)<=0){
                                Response::show('203','没有更多的翻牌数据了4');
                            }
                            $info = $query->andWhere("pre_user.id in ({$uniqueUser2}) ");break;
                        }

                        $userid = $this->getPalaceDislike($id,$uniqueUser);
                        $info = $query->andWhere("pre_user.id in ({$userid}) ");break;
                    }
                case 2:
                case 3:
                case 4://按成功率 --

                    $ids0 = TurnOverCardSuccess::find()->joinWith("user")->select('user_id')->where(['flag'=>0])->andWhere("pre_turn_over_card_success.user_id in ({$uniqueUser2})")->all();
                    $ids1 = TurnOverCardSuccess::find()->joinWith("like")->select('beliked')->where(['flag'=>0])->andWhere("pre_turn_over_card_success.beliked in ({$uniqueUser2})")->all();
                    $data = array();
                    foreach($ids0 as $id1){
                        $data[] = $id1['user_id'];
                    }
                    foreach($ids1 as $id1){
                        $data[] = $id1['beliked'];
                    }

                    if( count(array_unique($data)) >= 50 ){//

                        //1、成功次数大于等于5的优先(去除后宫的)
                        $data0 = array_count_values($data);
                        $data1 = array();
                        foreach( $data0 as $k=>$item ){
                            if( $item >= 5 ){
                                $data1[] = $k;
                            }
                        }
                        if( count($data1) >= 50 ){

                            $data2 = implode(',',array_unique($data1));
                            if(count(array_unique($data1))<=0){
                                Response::show('203','没有更多的翻牌数据了5');
                            }
                            $info = $query->Where(" pre_user.id in ({$data2}) ")->andWhere(['sex'=>$sex]);break;

                        }

                        //2、成功人次大于50时的人优先
                        if( count(array_unique($data)) >= 50 ){

                            if(count(array_unique($data))<=0){
                                Response::show('203','没有更多的翻牌数据了6');
                            }
                            $data2 = implode(',',array_unique($data));
                            $info = $query->Where("pre_user.id in ({$data2})")->andWhere(['sex'=>$sex]);break;
                        }
                    }

                    //如果人数少于50，把dislike上的人也获取过来
                    if(count($uniqueUser) >= 50){

                        $info = $query->andWhere("pre_user.id in ({$uniqueUser2}) ");break;
                    }else{

                        $userid = $this->getPalaceDislike($id,$uniqueUser);
                        $info = $query->andWhere("pre_user.id in ({$userid}) ");break;
                    }
                case 5://新人 (去除后宫的人)

                    $data = array();
                    $ids = TurnOverCardRecord::find()->select('user_id')->where("pre_turn_over_card_record.user_id in ({$uniqueUser2})")->asArray()->all();

                    foreach($ids as $id){
                        $data[] = $id['user_id'];
                    }
                    $data = array_unique($data);
                    $data0 = array();
                    foreach($uniqueUser as $item){
                        if(!in_array($item,$data)){
                            $data0[] = $item;   //去除翻过牌的
                        }
                    }

                    //新人
                    if( count($data0) >= 50 ){
                        $data1 = implode(',',$data0);
                        if(count($data0)<=0){
                            Response::show('203','没有更多的翻牌数据了7');
                        }
                        $info = $query->where(" pre_user.id in ({$data1}) ");break;
                    }

                    //如果人数少于50，把dislike上的人也获取过来
                    if(count($uniqueUser) >= 50){
                        $info = $query->andWhere("pre_user.id in ({$uniqueUser2}) ");break;
                    }

                    $userid = $this->getPalaceDislike($id,$uniqueUser);
                    $info = $query->andWhere("pre_user.id in ({$userid}) ");break;
                case 6:
                case 7:
                case 8://活跃度 一个月以内翻过牌的

                    $lastDay = mktime(23,59,59,date('m'),date('t'),date('Y'))+1;
                    $firstDay = mktime(23,59,59,date('m'),date('00'),date('Y'))+1;
                    $record = TurnOverCardRecord::find()
                        ->joinWith('user')
                        ->select('user_id')
                        ->where("pre_turn_over_card_record.created_at between {$firstDay} and {$lastDay}")
                        ->andWhere(" user_id in ({$uniqueUser2})")
                        ->andWhere(['sex'=>$sex])
                        ->all();

                    $rec = array();
                    foreach($record as $item){
                        $rec[] = $item['user_id'];
                    }

                    if( count(array_unique($rec)) >= 50 ){//

                        $data0 = array_count_values($rec);
                        $data1 = array();
                        foreach( $data0 as $k => $item ){
                            if( $item >= 5 ){
                                $data1[] = $k;
                            }
                        }
                        $data0 = array();
                        foreach( $data1 as $item ){
                            if(in_array($item,$uniqueUser)){
                                $data0[] = $item;
                            }
                        }
                        $data1 = implode(',',$data0);
                        if( count($data0) >= 50 ){//
                            if(count($data0)<=0){
                                Response::show('203','没有更多的翻牌数据了8');
                            }
                            //1、活跃度一个月使用5次以上的人，
                            $info = $query->where(" pre_user.id in ({$data1}) ")->andWhere(['sex'=>$sex]);break;
                        }

                        //2、当月翻过牌的优先
                        $data2 = array();
                        if(count(array_unique($rec)) >= 50 ){ //
                            foreach( $rec as $item ){
                                if(in_array($item,$uniqueUser)){
                                    $data2[] = $item;
                                }
                            }
                            $data2 = implode(',',$data2);
                            if(count($data2)<=0){
                                Response::show('203','没有更多的翻牌数据了9');
                            }
                            $info = $query->where(" pre_user.id in ({$data2}) ")->andWhere(['sex'=>$sex]);break;//1、活跃度一个月使用5次以上的人，
                        }
                    }else{

                        //3、翻过牌的
                        $record = TurnOverCardRecord::find()
                            ->joinWith('user')
                            ->select('user_id')
                            ->Where(" user_id in ({$uniqueUser2})")
                            ->andWhere(['sex'=>$sex])
                            ->all();
                        $data  = array();
                        foreach($record as $item){
                            $data[] = $item['user_id'];
                        }
                        if( count(array_unique($data)) >= 50 ){ //
                            $data = implode(',',array_unique($data));
                            if(count(array_unique($data))<=0){
                                Response::show('203','没有更多的翻牌数据了10');
                            }
                            $info = $query->where(" pre_user.id in ({$data}) ");break;
                        }
                    }

                    //如果人数少于50，把dislike上的人也获取过来
                    if(count($uniqueUser) >= 50){
                        $info = $query->andWhere("pre_user.id in ({$uniqueUser2}) ");break;
                    }

                    $userid = $this->getPalaceDislike($id,$uniqueUser);
                    $info = $query->andWhere("pre_user.id in ({$userid}) ");break;
                case 9://被喜欢率 被标记超级喜欢的优先 mark

                    $bestlike = TurnOverCardPalace::find()->select('like')
                        ->joinWith("user")
                        ->Where(" `like` in ({$uniqueUser2}) ")
                        ->andWhere(['like_best'=>1,'sex'=>$userInfo['sex'],'is_del'=>0])
                        ->all();
                    $data = array();
                    foreach($bestlike as $item){
                        $data[] = $item['like'];
                    }

                    if( count(array_unique($data)) >= 50 ){ //

                        $data0 = array_count_values($data);
                        $data1 = array();
                        foreach( $data0 as $k => $item ){
                            if( $item >= 5 ){
                                $data1[] = $k;
                            }
                        }

                        if( count($data1) >= 50 ){
                            if(count(array_unique($data1))<=0){
                                Response::show('203','没有更多的翻牌数据了11');
                            }
                            //（0）被标记超级喜欢5次以上且人次超过50个的人优先
                            $data2 = implode(',',$data1);
                            $where = " pre_user.id in ({$data2}) ";
                        }else{
                            if(count(array_unique($data))<=0){
                                Response::show('203','没有更多的翻牌数据了12');
                            }
                            //（0）被标记超级喜欢1次以上5次以内且人次超过50个的人优先
                            $data = implode(',',array_unique($data));
                            $where = " pre_user.id in ({$data}) ";
                        }

                    }else{

                        $bestlike = TurnOverCardPalace::find()->select('like')->Where(" `like` in ({$uniqueUser2}) ")->andWhere(['flag'=>1,'is_del'=>0])->all();
                        $belike3 = TurnOverCardSuccess::find()->select('user_id')->where(['flag'=>0])->andWhere(" user_id in ({$uniqueUser2}) ")->all();
                        $data = array();
                        foreach($bestlike as $item){
                            $data[] = $item['like'];
                        }
                        foreach($belike3 as $item){
                            $data[] = $item['user_id'];
                        }

                        //不重复的被喜欢人次的数量大于50
                        $data2 = array_unique($data);
                        if( count($data2) >= 50 ){//

                            //被标记喜欢次数大于5的优先
                            $likeids =  array_count_values($data);
                            $bestlike = array();
                            foreach($likeids as $key=>$value){
                                if( $value >= 5 ){
                                    $bestlike[]=$key;
                                }
                            }

                            if( count( array_unique( $bestlike ) ) >= 50 ){//

                                $data1 = implode(',',$bestlike );
                                $where = " pre_user.id in ({$data1}) ";//（1）被标记喜欢5次已上的人
                            }else{

                                $data3 = implode(',',$data2);
                                $where = " pre_user.id in ({$data3}) ";//（2）被标记喜欢的人
                            }
                        }else{

                            //如果人数少于50，把dislike上的人也获取过来
                            if(count($uniqueUser) >= 50){

                                $where = " pre_user.id in ({$uniqueUser2}) ";
                            }else{

                                $userid = $this->getPalaceDislike($id,$uniqueUser);
                                $where = "pre_user.id in ({$userid}) ";//（3）被喜欢过的人不到50个
                            }
                        }
                    }

                    $info = $query->where($where);break;
                default://去除同性和后宫的人（被dilike 的人）
                    $userid = $this->getPalaceDislike($id,$uniqueUser);
                    $info = $query->where(['sex'=>$sex])->andWhere(" pre_user.id in ({$userid})");
            }
        }

        $info = $info->groupBy('pre_user.id');

        return new ActiveDataProvider([
            'query' =>  $info,
            'pagination' => [
                'pageSize'  => 15,
            ],
            'sort'  =>  [
                'defaultOrder'   => [
                    //'pre_user.id'    =>  SORT_DESC,
                    'updated_at'    =>  SORT_DESC,
                ]
            ],
        ]);
    }

    protected function getPalaceDislike($userid,$uniqueUser){

        //把喜欢过的去除
        $palace = TurnOverCardPalace::find()->select('like')->where(['user_id'=>$userid,'flag'=>1,'is_del'=>0])->all();

        foreach($palace as $k=>$item){
            //$uniqueUser[] = $item['like'];
            if(in_array($item['like'],$uniqueUser)){
                unset($uniqueUser[$k]);
            }
        }
        $userid = implode(',',$uniqueUser);
        if(count($uniqueUser)<=0){
            Response::show('203','没有更多的翻牌数据了');
        }
        return $userid;
    }

    //每个会员每天只能喜欢有限个(匹配成功，直接成为好友关系)
    public function actionCreate($id){

        $decode = new Decode();
        if(!$decode->decodeDigit($id)){
            Response::show(210,'参数不正确');
        }

        $userInfo = User::find()->where(['id'=>$id])->one();
        if(empty($userInfo['id'])){
            Response::show('201','用户不存在');
        }
        $param = Yii::$app->getRequest()->getBodyParams();
        if(empty($param)){
            Response::show('201','参数不能为空');
        }
        if(empty($param['like'])){
            Response::show('201','参数不全');
        }

        $like_id = $param['like'];
        $flag    = isset($param['flag'])?$param['flag']:null;

        if($userInfo['sex'] == 1){
            $sex = 0;
        }else{
            $sex = 1;
        }

        //不能标记同性
        $likeInfo = User::find()->where(['id'=>$like_id,'sex'=>$sex])->one();
        if(empty($likeInfo['id'])){
            Response::show('201','不能翻同性的牌');
        }
        if(empty($userInfo['nickname'])){
            $userInfo['nickname'] = $userInfo['username'];
        }

        $time = TurnOverCard::find()->where(['flag'=>0])->one();

        //每天只能喜欢30个（包括超级喜欢）
        if($flag == 1 || $flag == 3){

            $today = strtotime('today');//mark
            $like_time = TurnOverCardPalace::find()->where(['user_id'=>$id,'created_at'=>$today,'flag'=>[1],'is_del'=>0])->count();

            if($like_time >= $time['turn_over_time']){

                Response::show('201',"每天只能喜欢".$time['turn_over_time']."个哦，快去后宫看看吧");
            }
        }

        $model = new TurnOverCardPalace();
        //可以重复标记某个人
        $result = $model::find()->where(['user_id'=>$id,'like'=>$like_id,'is_del'=>0,'flag'=>1])->one();
        if($result['id']){
            Response::show('201','您不能重复喜欢Ta');
        }

        //标记为 超喜欢(推送消息)
        if($flag == 3){

            $today = strtotime('today');
            $bestLikeNum = TurnOverCardPalace::find()->where(['like_best'=>1,'is_del'=>0,'created_at'=>$today])->count();
            if($bestLikeNum>=$time['send']){
                Response::show('201','每天只能超级喜欢'.$time['send'].'个哦');
            }
            //进入后宫
            $model->user_id = $id;
            $model->like = $like_id;
            $model->like_best = 1;
            $model->save();

            //记录推送消息
            $model1 = new TurnOverCardMessage();
            $model1->user_id = $like_id;
            $model1->from = $id;
            $model1->palace_id = $model->attributes['id'];
            $model1->message = "有人翻了你的牌，并对你表示了爱慕之心，快查看一下Ta的资料吧！";
            $model1->save();

            //查看对方是否也喜欢过你，如果是，直接成为好友关系,不推送
            if($this->becomeFriend($id,$like_id,$userInfo['username'],$likeInfo['username'])){

                //打招呼

                $FriendName = User::find()->where(['id'=>$like_id])->one();
                $friendInfo = $this->getUserInfo($id,$like_id);

                $str = [
                    'code'  =>  '202',
                    'message'   =>  $FriendName['nickname'].'也喜欢了你，去聊天吧？',
                    'data'  =>  $friendInfo,
                ];
                return $str;

            }else{

                //添加推送
                if($likeInfo['cid']){

                    $this->config();

                    $title = '有人在翻牌那里找到了你，并对你表示了爱慕之心，快查看一下Ta的资料吧！';
                    $msg = '有人在翻牌那里找到了你，并对你表示了爱慕之心，快查看一下Ta的资料吧！';
                    $extra = json_encode(array('push_title'=>urlencode($title),'push_content'=>urlencode($msg),'push_user_id'=>$id,'push_type'=>'SSCOMM_SUPER_FLOP'));
                    $extras = urldecode($extra);

                    $cids = [$likeInfo['cid']];

                    define('CID',$likeInfo['cid']);
                    pushMessageToList(1, $msg , $extras , $title , $cids);

                }
                Response::show('200','操作成功');
            }

        }else{

            //标记为喜欢或不喜欢
            if(empty($flag)){
                Response::show('201','您没有标记喜欢还是不喜欢');
            }
            $model->user_id = $id;
            $model->like = $like_id;
            $model->flag = $flag;
            $model->save();

            if($flag == 1){

                $FriendName = User::find()->where(['id'=>$like_id])->one();
                //查看对方是否也喜欢过你，如果是，直接成为好友关系
                if($this->becomeFriend($id,$like_id,$userInfo['username'],$FriendName['username'])){

                    if(empty($FriendName['nickname'])){
                        $FriendName['nickname'] = $FriendName['username'];
                    }

                    $friendInfo = $this->getUserInfo($id,$like_id);

                    $str = [
                        'code'  =>  '202',
                        'message'   =>  $FriendName['nickname'].'也喜欢了你，去聊天吧？',
                        'data'  =>  $friendInfo,
                    ];
                    return $str;
                }

                //添加关注
                $isFollow = (new Query())->from("{{%user_follow}}")->select("id")->where(['user_id'=>$id,'people_id'=>$like_id])->count();
                if(count($isFollow)){
                    Response::show('200','操作成功');
                }
                Yii::$app->db->createCommand("insert into {{%user_follow}} (user_id,people_id) VALUES ({$id},{$like_id})")->execute();
                Yii::$app->db->createCommand("UPDATE {{%user_data}} SET following_count=following_count+1 WHERE user_id=".$id)->execute();
                Yii::$app->db->createCommand("UPDATE {{%user_data}} SET follower_count=follower_count+1 WHERE user_id=".$like_id)->execute();
                $cid = Yii::$app->db->createCommand('select cid from {{%user}} where id='.$like_id)->queryOne();

                if(!empty($cid['cid'])){

                    $title = $userInfo['nickname']."成了您的粉丝";
                    $msg = $userInfo['nickname']."成了您的粉丝";
                    $date = time();
                    $icon = Yii::$app->params['icon'].'/images/app_push/u=3453872033,2552982116&fm=21&gp=0.png';
                    $extras = json_encode(array('push_title'=>urlencode($title),'push_content'=>urlencode($msg),'push_type'=>'SSCOMM_FANS'));
                    Yii::$app->db->createCommand("insert into {{%app_push}} (type,status,cid,title,msg,extras,platform,response,icon,created_at,updated_at) values('SSCOMM_FANS',2,'$cid[cid]','$title','$msg','$extras','all','NULL','$icon',$date,$date)")->execute();
                }
            }

            Response::show('200','操作成功');
        }

    }

    protected function getUserInfo($id,$like_id){

        $ids = $like_id.','.$id;
        $friendInfo = (new Query())->from('{{%user}}')
            ->leftJoin('{{%user_image}}','pre_user.id=pre_user_image.user_id')
            ->select('pre_user.id as user_id,username,img_url as avatar')
            ->where("user_id in ({$ids})")
            ->groupBy('user_id')
            ->all();
        return $friendInfo;
    }

    protected function becomeFriend($user_id,$like_id,$username,$FriendName){

        $isFriend = TurnOverCardPalace::find()->where(['user_id'=>$like_id,'like'=>$user_id,'is_del'=>0])->one();

        if(count($isFriend)){
            $friendModel = new MakeFriend();
            $friendModel->user_id = $user_id;
            $friendModel->friend_id = $like_id;
            $friendModel->flag = 0;
            $friendModel->created_at = time();
            $friendModel->updated_at = time();
            $friendModel->save();

            //添加好友成功
            $successModel = new TurnOverCardSuccess();
            $successModel->user_id = $isFriend['user_id'];
            $successModel->beliked = $user_id;
            $successModel->palace_id = $isFriend['id'];
            $successModel->created_at = strtotime('today');
            $successModel->updated_at = time();
            $successModel->save();

            //环信 好友关系
            $this->Easemob()->addFriend($username,$FriendName);
            return true;
        }else{
            return false;
        }

    }

    //解除好友关系
    public function actionDelete($id){

        $decode = new Decode();
        if(!$decode->decodeDigit($id)){
            Response::show(210,'参数不正确');
        }

        $friend_name = htmlspecialchars(Yii::$app->request->post('user_id'));
        $user_id = User::find()->select('id')->where(['username'=>$friend_name])->one();
        $friendId[] = htmlspecialchars($id);
        $friendId[] = $user_id['id'];

        if(!$user_id){
            Response::show('201','参数缺失');
        }


        $friendId2 = implode(',',$friendId);
        $username = Yii::$app->db->createCommand("select username from pre_user where id in ($friendId2)")->queryAll();

        if(count($friendId)>0){

            if(count($username)<2){
                Response::show('201','用户不存在');
            }
        }

        $data['owner_username'] = $username[0]['username'];
        $data['friend_username'] = $username[1]['username'];
        $this->Easemob()->delFriend($data['owner_username'],$data['friend_username']);

        $model = new MakeFriend();
        $relation = $model::find()
            ->where(['user_id'=>$id,'friend_id'=>$user_id['id'],'flag'=>0])
            ->orWhere(['user_id'=>$user_id['id'],'friend_id'=>$id,'flag'=>0])
            ->one();

        if($relation['id']){

            //解除好友关系
            Yii::$app->db->createCommand("update pre_make_friend set flag = 1 where id={$relation['id']}")->execute();
        }else{
            Response::show('201','好友关系不存在');
        }

        $palaceModel = new TurnOverCardPalace();
        $palace = $palaceModel::find()->where(['user_id'=>$id,'like'=>$user_id['id'],'is_del'=>0])->orWhere(['user_id'=>$user_id['id'],'like'=>$id,'is_del'=>0])->one();
        if($palace){

            Yii::$app->db->createCommand("update pre_turn_over_card_palace set is_del = 1 where id={$palace['id']}")->execute();
        }

        $successModel = new TurnOverCardSuccess();
        $successInfo = $successModel::find()->where(['palace_id'=>$palace['id'],'flag'=>0])->one();
        if($successInfo){

            Yii::$app->db->createCommand("update pre_turn_over_card_success set flag = 3 where palace_id={$palace['id']}")->execute();
            Yii::$app->db->createCommand("update pre_turn_over_card_message set flag = 1 where palace_id={$palace['id']}")->execute();
            Yii::$app->db->createCommand("update pre_turn_over_card_judge set flag = 1 where (user_id={$user_id['id']} AND for_who={$id}) or (user_id={$id} AND for_who={$user_id['id']})")->execute();
        }

        Response::show('200','关系解除成功');
    }

    public function Easemob(){

        $option = [
            'client_id'  => Yii::$app->params['client_id'],
            'client_secret' => Yii::$app->params['client_secret'],
            'org_name' => Yii::$app->params['org_name'],
            'app_name' => Yii::$app->params['app_name'] ,
        ];

        $se = new Easemob($option);
        return $se;
    }
}